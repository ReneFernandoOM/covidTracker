(() => { (() => { const t = [...document.querySelectorAll(".world-spinner")], a = document.querySelector("#affectedCountries"), n = document.querySelector("#casesConfirmed"), r = document.querySelector("#deathsConfirmed"), c = document.querySelector("#vaccAdmin"), o = document.querySelector("#vaccPers"), s = document.querySelector("#vaccPersPart"); Promise.all([(async () => { let e = await fetch("https://covid-api.mmediagroup.fr/v1/cases"), t = await e.json(), a = 0, n = 0, r = Object.keys(t).length; return Object.entries(t).forEach((([e, t]) => { a += t.All.confirmed, n += t.All.deaths })), { casosConf: a, muertes: n, paisesAfectados: r } })(), (async () => { let e = await fetch("https://covid-api.mmediagroup.fr/v1/vaccines"), t = await e.json(), a = 0, n = 0, r = 0; return Object.entries(t).forEach((([e, t]) => { a += t.All.administered, n += t.All.people_vaccinated, r += t.All.people_partially_vaccinated })), { vacAdministradas: a, persVacunadas: n, persPartVacc: r } })()]).then((i => { let l = Object.assign({}, ...i); t.forEach((e => { e.style.display = "none" })), a.innerText = l.paisesAfectados.toLocaleString("en-US"), n.innerText = l.casosConf.toLocaleString("en-US"), r.innerText = l.muertes.toLocaleString("en-US"), c.innerText = l.vacAdministradas.toLocaleString("en-US"), o.innerText = l.persVacunadas.toLocaleString("en-US"), s.innerText = l.persPartVacc.toLocaleString("en-US"), e.mainRender() })) })(); const e = (() => { const e = [...document.querySelectorAll(".country-spinner")], t = document.querySelector("#countryOptions"), a = document.querySelector("#updateCountryData"), n = document.querySelector("#countryLabel"), r = document.querySelector("#deathCol"), c = document.querySelector("#confCol"), o = document.querySelector("#casesConfirmedCountry"), s = document.querySelector("#deathsConfirmedCountry"), i = document.querySelector("#vaccAdminCountry"), l = document.querySelector("#vaccPersCountry"), d = document.querySelector("#vaccPersPartCountry"), u = [o, s, i, l, d], p = async () => { let e = await fetch(`https://covid-api.mmediagroup.fr/v1/cases?country=${t.value}`), a = (await e.json()).All; return { casosConf: a.confirmed, muertes: a.deaths } }, m = async () => { let e = await fetch(`https://covid-api.mmediagroup.fr/v1/vaccines?country=${t.value}`), a = await e.json(), n = a.All ? a.All : {}; return { vacAdministradas: n.administered ? n.administered : 0, persVacunadas: n.people_vaccinated ? n.people_vaccinated : 0, persPartVacc: n.people_partially_vaccinated ? n.people_partially_vaccinated : 0 } }, y = t => { let a = Object.assign({}, ...t); e.forEach((e => { e.style.display = "none" })), o.innerText = a.casosConf.toLocaleString("en-US"), s.innerText = a.muertes.toLocaleString("en-US"), i.innerText = a.vacAdministradas.toLocaleString("en-US"), l.innerText = a.persVacunadas.toLocaleString("en-US"), d.innerText = a.persPartVacc.toLocaleString("en-US") }, h = () => { const a = document.querySelectorAll(".chartCountry"); n.innerText = t.value, u.forEach((e => { e.innerText = "" })), e.forEach((e => { e.style.display = "inline-block" })), a.forEach((e => { e.parentElement.removeChild(e) })), (async () => { const e = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${t.value}&status=confirmed`, { mode: "cors" }); return await e.json() })().then((e => (e => { let t = document.createElement("canvas"); t.classList.add("chartCountry"), c.appendChild(t); const a = { datasets: [{ label: "Casos confirmados: ", backgroundColor: "rgb(212, 126, 15)", borderColor: "rgb(212, 126, 15)", data: e.All.dates }] }; new Chart(t, { type: "line", data: a, options: { scales: { xAxes: { reverse: !0 } }, plugins: { legend: { display: !1 }, title: { display: !0, text: "Casos confirmados" } } } }) })(e))), (async () => { const e = await fetch(`https://covid-api.mmediagroup.fr/v1/history?country=${t.value}&status=deaths`, { mode: "cors" }); return await e.json() })().then((e => (e => { let t = document.createElement("canvas"); t.classList.add("chartCountry"), r.appendChild(t); const a = { datasets: [{ label: "Defunciones: ", backgroundColor: "rgb(186, 43, 43)", borderColor: "rgb(186, 43, 43)", data: e.All.dates }] }; new Chart(t, { type: "line", data: a, options: { scales: { xAxes: { reverse: !0 } }, plugins: { legend: { display: !1 }, title: { display: !0, text: "Defunciones" } } } }) })(e))), Promise.all([p(), m()]).then(y) }; return (async () => { const e = await fetch("static/countries.json"); (await e.json()).forEach((e => { let a = document.createElement("option"); a.value = e, a.text = e, t.appendChild(a) })), $(t).selectpicker("refresh"), $(t).selectpicker("val", "Mexico") })(), a.addEventListener("click", (() => { h() })), { mainRender: h } })() })();